// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/zksnark.proto

package api

import (
	context "context"
	fmt "fmt"
	math "math"

	core "github.com/fbsobreira/gotron-sdk/pkg/proto/core"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ZksnarkResponse_Code int32

const (
	ZksnarkResponse_SUCCESS ZksnarkResponse_Code = 0
	ZksnarkResponse_FAILED  ZksnarkResponse_Code = 1
)

var ZksnarkResponse_Code_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILED",
}

var ZksnarkResponse_Code_value = map[string]int32{
	"SUCCESS": 0,
	"FAILED":  1,
}

func (x ZksnarkResponse_Code) String() string {
	return proto.EnumName(ZksnarkResponse_Code_name, int32(x))
}

func (ZksnarkResponse_Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb5591b636e41ae3, []int{1, 0}
}

type ZksnarkRequest struct {
	Transaction          *core.Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Sighash              []byte            `protobuf:"bytes,2,opt,name=sighash,proto3" json:"sighash,omitempty"`
	ValueBalance         int64             `protobuf:"varint,3,opt,name=valueBalance,proto3" json:"valueBalance,omitempty"`
	TxId                 string            `protobuf:"bytes,4,opt,name=txId,proto3" json:"txId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ZksnarkRequest) Reset()         { *m = ZksnarkRequest{} }
func (m *ZksnarkRequest) String() string { return proto.CompactTextString(m) }
func (*ZksnarkRequest) ProtoMessage()    {}
func (*ZksnarkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb5591b636e41ae3, []int{0}
}

func (m *ZksnarkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZksnarkRequest.Unmarshal(m, b)
}
func (m *ZksnarkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZksnarkRequest.Marshal(b, m, deterministic)
}
func (m *ZksnarkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZksnarkRequest.Merge(m, src)
}
func (m *ZksnarkRequest) XXX_Size() int {
	return xxx_messageInfo_ZksnarkRequest.Size(m)
}
func (m *ZksnarkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ZksnarkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ZksnarkRequest proto.InternalMessageInfo

func (m *ZksnarkRequest) GetTransaction() *core.Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *ZksnarkRequest) GetSighash() []byte {
	if m != nil {
		return m.Sighash
	}
	return nil
}

func (m *ZksnarkRequest) GetValueBalance() int64 {
	if m != nil {
		return m.ValueBalance
	}
	return 0
}

func (m *ZksnarkRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

type ZksnarkResponse struct {
	Code                 ZksnarkResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=protocol.ZksnarkResponse_Code" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ZksnarkResponse) Reset()         { *m = ZksnarkResponse{} }
func (m *ZksnarkResponse) String() string { return proto.CompactTextString(m) }
func (*ZksnarkResponse) ProtoMessage()    {}
func (*ZksnarkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb5591b636e41ae3, []int{1}
}

func (m *ZksnarkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZksnarkResponse.Unmarshal(m, b)
}
func (m *ZksnarkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZksnarkResponse.Marshal(b, m, deterministic)
}
func (m *ZksnarkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZksnarkResponse.Merge(m, src)
}
func (m *ZksnarkResponse) XXX_Size() int {
	return xxx_messageInfo_ZksnarkResponse.Size(m)
}
func (m *ZksnarkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ZksnarkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ZksnarkResponse proto.InternalMessageInfo

func (m *ZksnarkResponse) GetCode() ZksnarkResponse_Code {
	if m != nil {
		return m.Code
	}
	return ZksnarkResponse_SUCCESS
}

func init() {
	proto.RegisterEnum("protocol.ZksnarkResponse_Code", ZksnarkResponse_Code_name, ZksnarkResponse_Code_value)
	proto.RegisterType((*ZksnarkRequest)(nil), "protocol.ZksnarkRequest")
	proto.RegisterType((*ZksnarkResponse)(nil), "protocol.ZksnarkResponse")
}

func init() { proto.RegisterFile("api/zksnark.proto", fileDescriptor_bb5591b636e41ae3) }

var fileDescriptor_bb5591b636e41ae3 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x4f, 0x4f, 0xc2, 0x30,
	0x18, 0xc6, 0x99, 0x2c, 0xa0, 0xef, 0x08, 0x7f, 0x9a, 0x98, 0x4c, 0x0e, 0xba, 0xec, 0xb4, 0xd3,
	0x96, 0xcc, 0x83, 0x57, 0x61, 0xa2, 0xc1, 0x78, 0x20, 0x03, 0x0f, 0x72, 0xeb, 0x4a, 0xd9, 0x1a,
	0x70, 0xef, 0x6c, 0x8b, 0x31, 0x7e, 0x15, 0xbf, 0xac, 0xd9, 0x00, 0x51, 0xa3, 0xa7, 0xf6, 0xe9,
	0xfb, 0xf4, 0x79, 0x9f, 0xfc, 0xa0, 0x47, 0x0b, 0x11, 0xbc, 0xaf, 0x54, 0x4e, 0xe5, 0xca, 0x2f,
	0x24, 0x6a, 0x24, 0xc7, 0xd5, 0xc1, 0x70, 0xdd, 0xef, 0x30, 0x94, 0x3c, 0x98, 0x49, 0xcc, 0xb7,
	0x23, 0xf7, 0xc3, 0x80, 0xf6, 0x7c, 0x6b, 0x8e, 0xf9, 0xcb, 0x86, 0x2b, 0x4d, 0xae, 0xc0, 0xd2,
	0x92, 0xe6, 0x8a, 0x32, 0x2d, 0x30, 0xb7, 0x0d, 0xc7, 0xf0, 0xac, 0xf0, 0xd4, 0xdf, 0x67, 0xf8,
	0xb3, 0xc3, 0x30, 0xfe, 0xee, 0x24, 0x36, 0x34, 0x95, 0x48, 0x33, 0xaa, 0x32, 0xfb, 0xc8, 0x31,
	0xbc, 0x56, 0xbc, 0x97, 0xc4, 0x85, 0xd6, 0x2b, 0x5d, 0x6f, 0xf8, 0x90, 0xae, 0x69, 0xce, 0xb8,
	0x5d, 0x77, 0x0c, 0xaf, 0x1e, 0xff, 0x78, 0x23, 0x04, 0x4c, 0xfd, 0x36, 0x5e, 0xd8, 0xa6, 0x63,
	0x78, 0x27, 0x71, 0x75, 0x77, 0x97, 0xd0, 0xf9, 0x2a, 0xa7, 0x0a, 0xcc, 0x15, 0x27, 0x21, 0x98,
	0x0c, 0x17, 0xbc, 0xaa, 0xd5, 0x0e, 0xcf, 0x0f, 0xb5, 0x7e, 0x19, 0xfd, 0x08, 0x17, 0x3c, 0xae,
	0xbc, 0xee, 0x05, 0x98, 0xa5, 0x22, 0x16, 0x34, 0xa7, 0x8f, 0x51, 0x34, 0x9a, 0x4e, 0xbb, 0x35,
	0x02, 0xd0, 0xb8, 0x1d, 0x8c, 0x1f, 0x46, 0x37, 0x5d, 0x23, 0x7c, 0x02, 0xab, 0x64, 0xb2, 0x8b,
	0x20, 0xf7, 0xd0, 0x8b, 0x32, 0xce, 0x56, 0x3b, 0x3d, 0x91, 0x88, 0x4b, 0x62, 0xff, 0xb1, 0xaa,
	0x02, 0xd6, 0x3f, 0xfb, 0xb7, 0x84, 0x5b, 0x1b, 0x5e, 0x43, 0x0b, 0x65, 0xea, 0xeb, 0x12, 0x39,
	0x2d, 0xc4, 0x70, 0x4f, 0xfb, 0x4e, 0x16, 0x6c, 0x30, 0x19, 0xcf, 0x9d, 0x54, 0xe8, 0x6c, 0x93,
	0xf8, 0x0c, 0x9f, 0x83, 0x65, 0xa2, 0x30, 0x91, 0x5c, 0x48, 0x1a, 0xa4, 0x58, 0xfe, 0x08, 0x68,
	0x21, 0x92, 0x46, 0x95, 0x7e, 0xf9, 0x19, 0x00, 0x00, 0xff, 0xff, 0x73, 0x0b, 0x6a, 0x0a, 0xd9,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TronZksnarkClient is the client API for TronZksnark service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TronZksnarkClient interface {
	CheckZksnarkProof(ctx context.Context, in *ZksnarkRequest, opts ...grpc.CallOption) (*ZksnarkResponse, error)
}

type tronZksnarkClient struct {
	cc *grpc.ClientConn
}

func NewTronZksnarkClient(cc *grpc.ClientConn) TronZksnarkClient {
	return &tronZksnarkClient{cc}
}

func (c *tronZksnarkClient) CheckZksnarkProof(ctx context.Context, in *ZksnarkRequest, opts ...grpc.CallOption) (*ZksnarkResponse, error) {
	out := new(ZksnarkResponse)
	err := c.cc.Invoke(ctx, "/protocol.TronZksnark/CheckZksnarkProof", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TronZksnarkServer is the server API for TronZksnark service.
type TronZksnarkServer interface {
	CheckZksnarkProof(context.Context, *ZksnarkRequest) (*ZksnarkResponse, error)
}

// UnimplementedTronZksnarkServer can be embedded to have forward compatible implementations.
type UnimplementedTronZksnarkServer struct {
}

func (*UnimplementedTronZksnarkServer) CheckZksnarkProof(ctx context.Context, req *ZksnarkRequest) (*ZksnarkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckZksnarkProof not implemented")
}

func RegisterTronZksnarkServer(s *grpc.Server, srv TronZksnarkServer) {
	s.RegisterService(&_TronZksnark_serviceDesc, srv)
}

func _TronZksnark_CheckZksnarkProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZksnarkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TronZksnarkServer).CheckZksnarkProof(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.TronZksnark/CheckZksnarkProof",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TronZksnarkServer).CheckZksnarkProof(ctx, req.(*ZksnarkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TronZksnark_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.TronZksnark",
	HandlerType: (*TronZksnarkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckZksnarkProof",
			Handler:    _TronZksnark_CheckZksnarkProof_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/zksnark.proto",
}
